set nocompatible                  " disable vi-compatibility
set backspace=indent,eol,start    " allow backspace over everything
set nobackup                      " everything is already in VCS
set history=50                    " keep 50 lines of command line history
set ruler                         " show the cursor position all the time
set showcmd                       " display incomplete commands
set incsearch                     " do incremental searching
set hlsearch                      " highlight matched searchs
set autoindent                    " always enable auto indentation
set expandtab                     " insert spaces instead of tab
set tabstop=4                     " number of spaces for each tab
set shiftwidth=4                  " for autoindent
set softtabstop=4                 " make backspace jump to previous stop
set smartindent                   " auto detect when to insert indentation
set nolist                        " disable automatic line-break
set nowrap                        " disable automatic line-wrapping

set wildmenu                      " show completion on top of status line
set wildmode=longest,full         " complete longest, then show completions
set cursorline                    " highlight current line
set laststatus=2                  " always show the status line

set viminfo=                      " disable viminfo
set exrc                          " enable per-directory vimrc.

set guioptions-=T                 " remove toolbar
set guioptions-=r                 " remove right scrollbar
set guioptions-=L                 " remove left scrollbar

set rtp+=~/.dotfiles/vim/         " use dotfiles as RTP
set shell=bash                    " use POSIX-complaint shell

if has("win32")
  set shellslash                  " use forward slash for filename in Windows
endif

" Fix comment indentation
set cindent
set cinkeys=0{,0},!^F,o,O,e

" Syntax highlight
syntax on                              " always color terminal anyway
au BufNewFile,BufRead *.j setf objj    " syntax highlight for Objective-J
au BufNewFile,BufRead *.fish setf fish " syntax highlight for Fish
au BufNewFile,BufRead Vagrantfile setf ruby " syntax highlight for Vagrant
au BufNewFile,BufRead Guardfile setf ruby   " syntax highlight for Guard

autocmd BufReadPost *
  \ if line("'\"") > 0 && line("'\"") <= line("$") |
  \   exe "normal g`\"" |
  \ endif

" Aliases
nmap <leader>w :bd<cr>
nmap <leader>p :tabprevious<cr>
nmap <leader>n :tabnext<cr>
nmap <leader>h :wincmd h<cr>
nmap <leader>j :wincmd j<cr>
nmap <leader>k :wincmd k<cr>
nmap <leader>l :wincmd l<cr>

" Filetype-specific settings
autocmd FileType python setlocal smartindent
  \ cinwords=if,elif,else,for,while,try,except,finally,def,class

" Shorttabs (2 tabs instead of default 4)
let s:shorttabs = [
  \ "clojure",
  \ "cucumber",
  \ "eruby",
  \ "haml",
  \ "ruby",
  \ "sass",
  \ "scss",
  \ "vim",
  \ "yaml"
  \ ]
autocmd FileType * if index(s:shorttabs, &ft) > 0 | setlocal shiftwidth=2
autocmd FileType * if index(s:shorttabs, &ft) > 0 | setlocal tabstop=2
autocmd FileType * if index(s:shorttabs, &ft) > 0 | setlocal softtabstop=2

" Personalization
colorscheme molokai
set textwidth=0

if exists("&colorcolumn")
  set colorcolumn=79
endif

" Remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" Initialize Vundle if submodule is cloned.
if isdirectory(expand("~/.dotfiles/vim/bundle/Vundle.vim/autoload"))

  filetype off
  set rtp+=~/.dotfiles/vim/bundle/Vundle.vim/
  call vundle#begin("~/.dotfiles/vim/bundle")

  " Let Vundle manage Vundle
  Plugin 'gmarik/Vundle.vim'

  " Bundles!
  Plugin 'tpope/vim-fugitive'
  Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
  Plugin 'kien/ctrlp.vim'
  Plugin 'rking/ag.vim'
  Plugin 'terryma/vim-multiple-cursors'
  Plugin 'ervandew/supertab'
  Plugin 'kchmck/vim-coffee-script'
  Plugin 'wting/rust.vim'

  " Bundles that are to be enabled if GUI is running.
  if has("gui_running")
    Plugin 'bling/vim-airline'  " Messed up with exit codes and broke shell.
    Plugin 'daylerees/colour-schemes', {'rtp': 'vim/'}
  endif

  " Required by Vundle
  call vundle#end()
  filetype plugin indent on

  " Personalization if Vundle exists
  let g:ctrlp_map='<leader>t'  " Heh.

  " Ignored files for Ctrl-P
  let g:ctrlp_max_height = 20
  set wildignore+=.DS_Store,Thumbs.db
  set wildignore+=*.so,*.swp,*.zip,*.orig,*.log,*.tmp,*.db,*.pyc
  set wildignore+=*/log/*,*/tmp/*
  set wildignore+=*/node_modules/*
  set wildignore+=*/*.egg-info/*

endif

" These extras are pretty much unneeded when I'm not coding
if has("gui_running")

  " Default font for Linux, Mac, Windows
  set guifont+=Inconsolata-dz\ for\ Powerline:h12
  set guifont+=Inconsolata-dz:h12
  set guifont+=Monospace
  set guifont+=Menlo
  set guifont+=Consolas
  autocmd FileType html setlocal colorcolumn=0
  colorscheme carbonight-purist

  " Initial line size and line numbers
  set number
  set lines=50

  " Plugins that should be configured only when Vundle exists.
  if isdirectory(expand("~/.dotfiles/vim/bundle/Vundle.vim/autoload"))
    let g:airline_powerline_fonts=1
  endif

endif

" vim:ft=vim
